<!DOCTYPE html>
<html>
  <head>
    <meta charset="utf-8">
    <meta name="apple-mobile-web-app-capable" content="yes">
    <meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1,shrink-to-fit=no , user-scalable=no">

    <title>Project-CentralPoint</title>

    <link rel="stylesheet" href="/css/material.min.css">

    <link rel="stylesheet" href="/css/seconRunStyle.css">
    <link rel="stylesheet" href="https://fonts.googleapis.com/icon?family=Material+Icons">
    <link href="https://fonts.googleapis.com/css?family=Open+Sans|VT323" rel="stylesheet">



<!--  <link rel="stylesheet" href="/css/style.css"> --><!--Later-->
    <script defer src="/js/material.min.js"></script>



  </head>
  <script src="https://www.gstatic.com/firebasejs/3.6.9/firebase.js"></script>
<script>

                    // Initialize Firebase
                            var config = {
                            apiKey: "AIzaSyDWbOM-S0cUTsd2-BIMZ4gMb1emqm5Pf88",
                            authDomain: "project-cp-def29.firebaseapp.com",
                            databaseURL: "https://project-cp-def29.firebaseio.com",
                            storageBucket: "project-cp-def29.appspot.com",
                            messagingSenderId: "651436094861"
                            };
                    firebase.initializeApp(config);
</script>

<script>
                      function post(path, params, method) {
                          method = method || "post";

                          var form = document.createElement("form");
                          form.setAttribute("method", method);
                          form.setAttribute("action", path);

                          for(var key in params) {
                              if(params.hasOwnProperty(key)) {
                                  var hiddenField = document.createElement("input");
                                  hiddenField.setAttribute("type", "hidden");
                                  hiddenField.setAttribute("name", key);
                                  hiddenField.setAttribute("value", params[key]);

                                  form.appendChild(hiddenField);
                               }
                          }

                          document.body.appendChild(form);
                          form.submit();
                      }

                      function SignOut(){
                        firebase.auth().signOut();

                      }//SignOut END_


                      function LetsGoFEED(){
                        window.location = "/feedback"
                      }

                      function LetsGoCHAT(){
                        window.location = "/chatroom"
                      }



                      function initApp(){
                        //Listener for state change log in/out
                          firebase.auth().onAuthStateChanged(function(user) {
                            if (user) {
                              console.log("Signed in");
                                // User is signed in.
                                var displayName = user.displayName;
                                var email = user.email;
                                window.email = user.email
                                //document.getElementById('displaySignedUser').innerHTML = "Signed in as: "+email;
                                console.log(user.email);
                                var emailVerified = user.emailVerified;
                                console.log(emailVerified);
                                var photoURL = user.photoURL;
                                var isAnonymous = user.isAnonymous;
                                var uid = user.uid;
                                var providerData = user.providerData;
                                // [START_EXCLUDE silent]
                                //document.getElementById('signoutBTN').value='Sign Out';



                      // [END_EXCLUDE]
                                }else {
                                    console.log("NO USER");
                                    window.location = "/";
                                  }
                                    });




                      document.getElementById('Signoutthirddr').addEventListener('click',SignOut,false);
                        document.getElementById('feedrrrr').addEventListener('click',LetsGoFEED,false);
                        document.getElementById('firstdr').addEventListener('click',LetsGoCHAT,false);
                      window.clck = 0


                      }
                      window.onload = function() {
                      initApp();

                      };







</script>





  <body>



    <div class="demo-layout-transparent mdl-layout mdl-js-layout">
      <header class="mdl-layout__header mdl-layout__header--transparent">


        <div class="mdl-layout__header-row">
          <!-- Title -->
          <span class="mdl-layout-title">Title</span>


          <!-- Add spacer, to align navigation to the right -->
          <div class="mdl-layout-spacer"></div>


        </div>
      </header>
      <div id="Drawerdd"class="mdl-layout__drawer">
        <span class="mdl-layout-title" id="titleofdrawer"></span>
        <label id="emaillabelUNDER"></label>
        <nav id="DrawBTN"class="mdl-navigation">
          <a id="firstdr"class="mdl-navigation__link">Chatrooms</a>
          <a id="feedrrrr"class="mdl-navigation__link">Feedback-Forms</a>
          <a id="Signoutthirddr"class="mdl-navigation__link">Sign-Out</a>

        </nav>
      </div>
      <main class="mdl-layout__content">
      <!-- this is where the main begins -->



      </main>
    </div>
    <script src="/socket.io/socket.io.js"></script>




  <!--Before the Major workout==will be used later for validation==
    <script src="js/libs/jquery.validate.js"></script>
    <script src="js/signup.js"></script
    -->
    <script src="js/libs/jquery-3.1.0.min.js"></script>


    <script src="js/getuserInfo.js"></script>



    <script>
      var socket = io();
      socket.on('connect',()=>{
        console.log('Connected to server');
      });
      socket.on('disconnect',()=>{
        console.log('Disconnected from server');
      });
      </script>


  </body>
</html>
